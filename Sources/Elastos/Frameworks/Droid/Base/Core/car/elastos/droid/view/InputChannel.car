//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    namespace Elastos {
    namespace Droid {
    namespace View {

    /**
     * An input channel specifies the file descriptors used to send input events to
     * a window in another process.  It is Parcelable so that it can be sent
     * to the process that is to receive events.  Only one thread should be reading
     * from an InputChannel at a time.
     * @hide
     */
    /**
     * @Involve
     * interface IParcelable
     */
    interface IInputChannel {
        /**
         * Gets the name of the input channel.
         * @return The input channel name.
         */
        GetName(
            [out] String* name);

        /**
         * Disposes the input channel.
         * Explicitly releases the reference this object is holding on the input channel.
         * When all references are released, the input channel will be closed.
         */
        Dispose();

        /**
         * Transfers ownership of the internal state of the input channel to another
         * instance and invalidates this instance.  This is used to pass an input channel
         * as an out parameter in a binder call.
         * @param other The other input channel instance.
         */
        TransferTo(
            [in] IInputChannel* outParameter);

        /**
         * Duplicates the input channel.
         */
        Dup(
            [out] IInputChannel** ic);

        GetNativeInputChannel(
            [out] HANDLE* ptr);
    }

    interface IInputChannelHelper {
        /**
         * Creates a new input channel pair.  One channel should be provided to the input
         * dispatcher and the other to the application's input queue.
         * @param name The descriptive (non-unique) name of the channel pair.
         * @return A pair of input channels.  The first channel is designated as the
         * server channel and should be used to publish input events.  The second channel
         * is designated as the client channel and should be used to consume input events.
         */
        OpenInputChannelPair(
            [in] String name,
            [out, callee] ArrayOf<IInputChannel*>* inputChannel);
    }

    } // namespace View
    } // namepsace Droid
    } // namespace Elastos
}
