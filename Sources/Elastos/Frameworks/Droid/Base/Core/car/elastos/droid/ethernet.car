//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

module
{
    merge("net/ethernet/EthernetDevInfo.car");
    // merge("net/ethernet/EthernetNative.car");
    merge("net/ethernet/IEthernetManager.car");
    merge("net/ethernet/EthernetManager.car");

    merge("net/nsd/NsdServiceInfo.car");
    merge("net/nsd/NsdManager.car");
    merge("net/nsd/INsdManager.car");
    merge("net/nsd/DnsSdTxtRecord.car");

    interface Elastos.Droid.Os.IBinder;
    interface Elastos.Droid.Net.IINetworkManagementEventObserver;

    namespace Elastos {
    namespace Droid {
    namespace Net {
    namespace Ethernet {

        singleton class CEthernetManager {
            constructor();

            interface IEthernetManager;
        }

        class CEthernetDevInfo {
            constructor();

            interface IEthernetDevInfo;
            interface IParcelable;
        }

        class CEDTInterfaceObserver {
            constructor(
                [in] HANDLE tracker);

            interface IINetworkManagementEventObserver;
            interface IBinder;
        }
    }
    }
    }
    }

    interface Elastos.Droid.Content.IContext;

    namespace Elastos {
    namespace Droid {
    namespace Net {
    namespace Nsd {

        [deprecated, local]
        class CNsdManager {
            constructor(
                [in] IContext* ctx,
                [in] IINsdManager* service);

            interface INsdManager;
        }

        class CNsdServiceInfo {
            constructor();

            constructor(
                [in] String sn,
                [in] String rt,
                [in] IDnsSdTxtRecord* tr);

            interface INsdServiceInfo;
            interface IParcelable;
        }

        [deprecated]
        class CDnsSdTxtRecord {
            constructor();

            constructor(
                [in] ArrayOf<Byte>* data);

            constructor(
                [in] IDnsSdTxtRecord* src);

            interface IDnsSdTxtRecord;
            interface IParcelable;
        }

    } // namespace Nsd
    } // namespace Net
    } // namespace Droid
    } // namespace Elastos
}
