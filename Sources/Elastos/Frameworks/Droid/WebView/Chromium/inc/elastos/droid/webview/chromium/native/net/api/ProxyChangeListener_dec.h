//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    ProxyChangeListener.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_PROXYCHANGELISTENER_CALLBACK_DEC_HH
#define ELASTOS_PROXYCHANGELISTENER_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_ProxyChangeListener_nativeProxySettingsChangedTo(IInterface* caller,HANDLE nativePtr,const String& host,Int32 port);
    extern void Elastos_ProxyChangeListener_nativeProxySettingsChanged(IInterface* caller,HANDLE nativePtr);
    extern void Elastos_ProxyChangeListener_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Net {

struct ElaProxyChangeListenerCallback
{
    AutoPtr<IInterface> (*elastos_ProxyChangeListener_create)(IInterface* context);
    String (*elastos_ProxyChangeListener_getProperty)(const String& property);
    void (*elastos_ProxyChangeListener_start)(IInterface* obj, HANDLE nativePtr);
    void (*elastos_ProxyChangeListener_stop)(IInterface* obj);
};

void* ProxyChangeListener::ElaProxyChangeListenerCallback_Init()
{
    static ElaProxyChangeListenerCallback sElaProxyChangeListenerCallback;

    sElaProxyChangeListenerCallback.elastos_ProxyChangeListener_create = &ProxyChangeListener::Create;
    sElaProxyChangeListenerCallback.elastos_ProxyChangeListener_getProperty = &ProxyChangeListener::GetProperty;
    sElaProxyChangeListenerCallback.elastos_ProxyChangeListener_start = &ProxyChangeListener::Start;
    sElaProxyChangeListenerCallback.elastos_ProxyChangeListener_stop = &ProxyChangeListener::Stop;

    Elastos_ProxyChangeListener_InitCallback((HANDLE)&sElaProxyChangeListenerCallback);
    return &sElaProxyChangeListenerCallback;
}

static void* sPElaProxyChangeListenerCallback = ProxyChangeListener::ElaProxyChangeListenerCallback_Init();

} // namespace Net
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_PROXYCHANGELISTENER_CALLBACK_DEC_HH
