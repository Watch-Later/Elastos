//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    MediaPlayerListener.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_MEDIAPLAYERLISTENER_CALLBACK_DEC_HH
#define ELASTOS_MEDIAPLAYERLISTENER_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_MediaPlayerListener_nativeOnMediaError(IInterface* caller,HANDLE nativeMediaPlayerListener,Int32 errorType);
    extern void Elastos_MediaPlayerListener_nativeOnVideoSizeChanged(IInterface* caller,HANDLE nativeMediaPlayerListener,Int32 width,Int32 height);
    extern void Elastos_MediaPlayerListener_nativeOnBufferingUpdate(IInterface* caller,HANDLE nativeMediaPlayerListener,Int32 percent);
    extern void Elastos_MediaPlayerListener_nativeOnMediaPrepared(IInterface* caller,HANDLE nativeMediaPlayerListener);
    extern void Elastos_MediaPlayerListener_nativeOnPlaybackComplete(IInterface* caller,HANDLE nativeMediaPlayerListener);
    extern void Elastos_MediaPlayerListener_nativeOnSeekComplete(IInterface* caller,HANDLE nativeMediaPlayerListener);
    extern void Elastos_MediaPlayerListener_nativeOnMediaInterrupted(IInterface* caller,HANDLE nativeMediaPlayerListener);
    extern void Elastos_MediaPlayerListener_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Media {

struct ElaMediaPlayerListenerCallback
{
    void (*elastos_MediaPlayerListener_releaseResources)(IInterface* obj);
    AutoPtr<IInterface> (*elastos_MediaPlayerListener_create)(HANDLE nativeMediaPlayerListener, IInterface* context, IInterface* mediaPlayerBridge);
};

void* MediaPlayerListener::ElaMediaPlayerListenerCallback_Init()
{
    static ElaMediaPlayerListenerCallback sElaMediaPlayerListenerCallback;

    sElaMediaPlayerListenerCallback.elastos_MediaPlayerListener_releaseResources = &MediaPlayerListener::ReleaseResources;
    sElaMediaPlayerListenerCallback.elastos_MediaPlayerListener_create = &MediaPlayerListener::Create;

    Elastos_MediaPlayerListener_InitCallback((HANDLE)&sElaMediaPlayerListenerCallback);
    return &sElaMediaPlayerListenerCallback;
}

static void* sPElaMediaPlayerListenerCallback = MediaPlayerListener::ElaMediaPlayerListenerCallback_Init();

} // namespace Media
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_MEDIAPLAYERLISTENER_CALLBACK_DEC_HH
