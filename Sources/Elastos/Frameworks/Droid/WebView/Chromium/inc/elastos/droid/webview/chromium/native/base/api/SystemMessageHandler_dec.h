//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    SystemMessageHandler.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_SYSTEMMESSAGEHANDLER_CALLBACK_DEC_HH
#define ELASTOS_SYSTEMMESSAGEHANDLER_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_SystemMessageHandler_nativeDoRunLoopOnce(IInterface* caller,Int64 messagePumpDelegateNative,Int64 delayedScheduledTimeTicks);
    extern void Elastos_SystemMessageHandler_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Base {

struct ElaSystemMessageHandlerCallback
{
    void (*elastos_SystemMessageHandler_scheduleWork)(IInterface* obj);
    void (*elastos_SystemMessageHandler_scheduleDelayedWork)(IInterface* obj, Int64 delayedTimeTicks, Int64 millis);
    void (*elastos_SystemMessageHandler_removeAllPendingMessages)(IInterface* obj);
    AutoPtr<IInterface> (*elastos_SystemMessageHandler_create)(Int64 messagePumpDelegateNative);
};

void* SystemMessageHandler::ElaSystemMessageHandlerCallback_Init()
{
    static ElaSystemMessageHandlerCallback sElaSystemMessageHandlerCallback;

    sElaSystemMessageHandlerCallback.elastos_SystemMessageHandler_scheduleWork = &SystemMessageHandler::ScheduleWork;
    sElaSystemMessageHandlerCallback.elastos_SystemMessageHandler_scheduleDelayedWork = &SystemMessageHandler::ScheduleDelayedWork;
    sElaSystemMessageHandlerCallback.elastos_SystemMessageHandler_removeAllPendingMessages = &SystemMessageHandler::RemoveAllPendingMessages;
    sElaSystemMessageHandlerCallback.elastos_SystemMessageHandler_create = &SystemMessageHandler::Create;

    Elastos_SystemMessageHandler_InitCallback((HANDLE)&sElaSystemMessageHandlerCallback);
    return &sElaSystemMessageHandlerCallback;
}

static void* sPElaSystemMessageHandlerCallback = SystemMessageHandler::ElaSystemMessageHandlerCallback_Init();

} // namespace Base
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_SYSTEMMESSAGEHANDLER_CALLBACK_DEC_HH
