//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    InputStreamUtil.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_INPUTSTREAMUTIL_CALLBACK_DEC_HH
#define ELASTOS_INPUTSTREAMUTIL_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_InputStreamUtil_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif

namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace AndroidWebview {

struct ElaInputStreamUtilCallback
{
    void (*elastos_InputStreamUtil_close)(IInterface* stream);
    Int32 (*elastos_InputStreamUtil_available)(IInterface* stream);
    Int32 (*elastos_InputStreamUtil_read)(IInterface* stream, ArrayOf<Byte>* b, Int32 off, Int32 len);
    Int64 (*elastos_InputStreamUtil_skip)(IInterface* stream, Int64 n);
};

void* InputStreamUtil::ElaInputStreamUtilCallback_Init()
{
    static ElaInputStreamUtilCallback sElaInputStreamUtilCallback;

    sElaInputStreamUtilCallback.elastos_InputStreamUtil_close = &InputStreamUtil::Close;
    sElaInputStreamUtilCallback.elastos_InputStreamUtil_available = &InputStreamUtil::Available;
    sElaInputStreamUtilCallback.elastos_InputStreamUtil_read = &InputStreamUtil::Read;
    sElaInputStreamUtilCallback.elastos_InputStreamUtil_skip = &InputStreamUtil::Skip;

    Elastos_InputStreamUtil_InitCallback((HANDLE)&sElaInputStreamUtilCallback);
    return &sElaInputStreamUtilCallback;
}

static void* sPElaInputStreamUtilCallback = InputStreamUtil::ElaInputStreamUtilCallback_Init();

} // namespace AndroidWebview
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_INPUTSTREAMUTIL_CALLBACK_DEC_HH
