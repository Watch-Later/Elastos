//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    ColorChooserAndroid.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_COLORCHOOSERANDROID_CALLBACK_DEC_HH
#define ELASTOS_COLORCHOOSERANDROID_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_ColorChooserAndroid_nativeOnColorChosen(IInterface* caller,HANDLE nativeColorChooserAndroid,Int32 color);
    extern void Elastos_ColorChooserAndroid_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Components {

struct ElaColorChooserAndroidCallback
{
    void (*elastos_ColorChooserAndroid_closeColorChooser)(IInterface* obj);
    AutoPtr<IInterface> (*elastos_ColorChooserAndroid_createColorChooserAndroid)(HANDLE nativeColorChooserAndroid, IInterface* contentViewCore, Int32 initialColor, ArrayOf<IInterface*>* suggestions);
    AutoPtr<ArrayOf<IInterface*> > (*elastos_ColorChooserAndroid_createColorSuggestionArray)(Int32 size);
    void (*elastos_ColorChooserAndroid_addToColorSuggestionArray)(ArrayOf<IInterface*>* array, Int32 index, Int32 color, const String& label);
};

void* ColorChooserElastos::ElaColorChooserElastosCallback_Init()
{
    static ElaColorChooserAndroidCallback sElaColorChooserAndroidCallback;

    sElaColorChooserAndroidCallback.elastos_ColorChooserAndroid_closeColorChooser = &ColorChooserElastos::CloseColorChooser;
    sElaColorChooserAndroidCallback.elastos_ColorChooserAndroid_createColorChooserAndroid = &ColorChooserElastos::CreateColorChooserElastos;
    sElaColorChooserAndroidCallback.elastos_ColorChooserAndroid_createColorSuggestionArray = &ColorChooserElastos::CreateColorSuggestionArray;
    sElaColorChooserAndroidCallback.elastos_ColorChooserAndroid_addToColorSuggestionArray = &ColorChooserElastos::AddToColorSuggestionArray;

    Elastos_ColorChooserAndroid_InitCallback((HANDLE)&sElaColorChooserAndroidCallback);
    return &sElaColorChooserAndroidCallback;
}

static void* sPElaColorChooserElastosCallback = ColorChooserElastos::ElaColorChooserElastosCallback_Init();

} // namespace Components
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_COLORCHOOSERANDROID_CALLBACK_DEC_HH
