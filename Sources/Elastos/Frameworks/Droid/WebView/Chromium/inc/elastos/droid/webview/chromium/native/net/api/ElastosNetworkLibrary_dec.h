//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    AndroidNetworkLibrary.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_ANDROIDNETWORKLIBRARY_CALLBACK_DEC_HH
#define ELASTOS_ANDROIDNETWORKLIBRARY_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_AndroidNetworkLibrary_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif

namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Net {

struct ElaAndroidNetworkLibraryCallback
{
    Boolean (*elastos_AndroidNetworkLibrary_storeKeyPair)(IInterface* context, ArrayOf<Byte>* publicKey, ArrayOf<Byte>* privateKey);
    Boolean (*elastos_AndroidNetworkLibrary_storeCertificate)(IInterface* context, Int32 certType, ArrayOf<Byte>* data);
    String (*elastos_AndroidNetworkLibrary_getMimeTypeFromExtension)(const String& extension);
    Boolean (*elastos_AndroidNetworkLibrary_haveOnlyLoopbackAddresses)();
    String (*elastos_AndroidNetworkLibrary_getNetworkList)();
    AutoPtr<IInterface> (*elastos_AndroidNetworkLibrary_verifyServerCertificates)(ArrayOf<AutoPtr<ArrayOf<Byte> > >* certChain, const String& authType, const String& host);
    void (*elastos_AndroidNetworkLibrary_addTestRootCertificate)(ArrayOf<Byte>* rootCert);
    void (*elastos_AndroidNetworkLibrary_clearTestRootCertificates)();
    String (*elastos_AndroidNetworkLibrary_getNetworkCountryIso)(IInterface* context);
    String (*elastos_AndroidNetworkLibrary_getNetworkOperator)(IInterface* context);
};

void* ElastosNetworkLibrary::ElaElastosNetworkLibraryCallback_Init()
{
    static ElaAndroidNetworkLibraryCallback sElaAndroidNetworkLibraryCallback;

    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_storeKeyPair = &ElastosNetworkLibrary::StoreKeyPair;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_storeCertificate = &ElastosNetworkLibrary::StoreCertificate;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_getMimeTypeFromExtension = &ElastosNetworkLibrary::GetMimeTypeFromExtension;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_haveOnlyLoopbackAddresses = &ElastosNetworkLibrary::HaveOnlyLoopbackAddresses;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_getNetworkList = &ElastosNetworkLibrary::GetNetworkList;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_verifyServerCertificates = &ElastosNetworkLibrary::VerifyServerCertificates;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_addTestRootCertificate = &ElastosNetworkLibrary::AddTestRootCertificate;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_clearTestRootCertificates = &ElastosNetworkLibrary::ClearTestRootCertificates;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_getNetworkCountryIso = &ElastosNetworkLibrary::GetNetworkCountryIso;
    sElaAndroidNetworkLibraryCallback.elastos_AndroidNetworkLibrary_getNetworkOperator = &ElastosNetworkLibrary::GetNetworkOperator;

    Elastos_AndroidNetworkLibrary_InitCallback((HANDLE)&sElaAndroidNetworkLibraryCallback);
    return &sElaAndroidNetworkLibraryCallback;
}

static void* sPElaElastosNetworkLibraryCallback = ElastosNetworkLibrary::ElaElastosNetworkLibraryCallback_Init();

} // namespace Net
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_ANDROIDNETWORKLIBRARY_CALLBACK_DEC_HH
