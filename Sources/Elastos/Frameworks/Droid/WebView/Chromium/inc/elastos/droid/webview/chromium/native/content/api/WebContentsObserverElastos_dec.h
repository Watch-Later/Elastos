//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    WebContentsObserverAndroid.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_WEBCONTENTSOBSERVERANDROID_CALLBACK_DEC_HH
#define ELASTOS_WEBCONTENTSOBSERVERANDROID_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern HANDLE Elastos_WebContentsObserverAndroid_nativeInit(IInterface* caller,IInterface* webContents);
    extern void Elastos_WebContentsObserverAndroid_nativeDestroy(IInterface* caller,HANDLE nativeWebContentsObserverElastos);
    extern void Elastos_WebContentsObserverAndroid_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Content {
namespace Browser {

struct ElaWebContentsObserverAndroidCallback
{
    void (*elastos_WebContentsObserverAndroid_renderProcessGone)(IInterface* obj, Boolean wasOomProtected);
    void (*elastos_WebContentsObserverAndroid_didStartLoading)(IInterface* obj, const String& url);
    void (*elastos_WebContentsObserverAndroid_didStopLoading)(IInterface* obj, const String& url);
    void (*elastos_WebContentsObserverAndroid_didFailLoad)(IInterface* obj, Boolean isProvisionalLoad, Boolean isMainFrame, Int32 errorCode, const String& description, const String& failingUrl);
    void (*elastos_WebContentsObserverAndroid_didNavigateMainFrame)(IInterface* obj, const String& url, const String& baseUrl, Boolean isNavigationToDifferentPage, Boolean isFragmentNavigation);
    void (*elastos_WebContentsObserverAndroid_didFirstVisuallyNonEmptyPaint)(IInterface* obj);
    void (*elastos_WebContentsObserverAndroid_didNavigateAnyFrame)(IInterface* obj, const String& url, const String& baseUrl, Boolean isReload);
    void (*elastos_WebContentsObserverAndroid_didStartProvisionalLoadForFrame)(IInterface* obj, Int64 frameId, Int64 parentFrameId, Boolean isMainFrame, const String& validatedUrl, Boolean isErrorPage, Boolean isIframeSrcdoc);
    void (*elastos_WebContentsObserverAndroid_didCommitProvisionalLoadForFrame)(IInterface* obj, Int64 frameId, Boolean isMainFrame, const String& url, Int32 transitionType);
    void (*elastos_WebContentsObserverAndroid_didFinishLoad)(IInterface* obj, Int64 frameId, const String& validatedUrl, Boolean isMainFrame);
    void (*elastos_WebContentsObserverAndroid_documentLoadedInFrame)(IInterface* obj, Int64 frameId);
    void (*elastos_WebContentsObserverAndroid_navigationEntryCommitted)(IInterface* obj);
    void (*elastos_WebContentsObserverAndroid_didAttachInterstitialPage)(IInterface* obj);
    void (*elastos_WebContentsObserverAndroid_didDetachInterstitialPage)(IInterface* obj);
    void (*elastos_WebContentsObserverAndroid_didChangeThemeColor)(IInterface* obj, Int32 color);
    void (*elastos_WebContentsObserverAndroid_detachFromWebContents)(IInterface* obj);
};

void* WebContentsObserverElastos::ElaWebContentsObserverElastosCallback_Init()
{
    static ElaWebContentsObserverAndroidCallback sElaWebContentsObserverAndroidCallback;

    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_renderProcessGone = &WebContentsObserverElastos::RenderProcessGone;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_didStartLoading = &WebContentsObserverElastos::DidStartLoading;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_didStopLoading = &WebContentsObserverElastos::DidStopLoading;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_didFailLoad = &WebContentsObserverElastos::DidFailLoad;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_didNavigateMainFrame = &WebContentsObserverElastos::DidNavigateMainFrame;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_didFirstVisuallyNonEmptyPaint = &WebContentsObserverElastos::DidFirstVisuallyNonEmptyPaint;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_didNavigateAnyFrame = &WebContentsObserverElastos::DidNavigateAnyFrame;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_didStartProvisionalLoadForFrame = &WebContentsObserverElastos::DidStartProvisionalLoadForFrame;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_didCommitProvisionalLoadForFrame = &WebContentsObserverElastos::DidCommitProvisionalLoadForFrame;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_didFinishLoad = &WebContentsObserverElastos::DidFinishLoad;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_documentLoadedInFrame = &WebContentsObserverElastos::DocumentLoadedInFrame;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_navigationEntryCommitted = &WebContentsObserverElastos::NavigationEntryCommitted;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_didAttachInterstitialPage = &WebContentsObserverElastos::DidAttachInterstitialPage;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_didDetachInterstitialPage = &WebContentsObserverElastos::DidDetachInterstitialPage;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_didChangeThemeColor = &WebContentsObserverElastos::DidChangeThemeColor;
    sElaWebContentsObserverAndroidCallback.elastos_WebContentsObserverAndroid_detachFromWebContents = &WebContentsObserverElastos::DetachFromWebContents;

    Elastos_WebContentsObserverAndroid_InitCallback((HANDLE)&sElaWebContentsObserverAndroidCallback);
    return &sElaWebContentsObserverAndroidCallback;
}

static void* sPElaWebContentsObserverElastosCallback = WebContentsObserverElastos::ElaWebContentsObserverElastosCallback_Init();

} // namespace Browser
} // namespace Content
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_WEBCONTENTSOBSERVERANDROID_CALLBACK_DEC_HH
