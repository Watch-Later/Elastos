//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    ContentViewCore.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_CONTENTVIEWCORE_CALLBACK_DEC_HH
#define ELASTOS_CONTENTVIEWCORE_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern HANDLE Elastos_ContentViewCore_nativeInit(IInterface* caller,HANDLE webContentsPtr,HANDLE viewAndroidPtr,HANDLE windowAndroidPtr,IInterface* retainedObjectSet);
    extern AutoPtr<IInterface> Elastos_ContentViewCore_nativeGetWebContentsAndroid(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeOnJavaContentViewCoreDestroyed(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeLoadUrl(IInterface* caller,HANDLE nativeContentViewCoreImpl,const String& url,Int32 loadUrlType,Int32 transitionType,const String& referrerUrl,Int32 referrerPolicy,Int32 uaOverrideOption,const String& extraHeaders,ArrayOf<Byte>* postData,const String& baseUrlForDataUrl,const String& virtualUrlForDataUrl,Boolean canLoadLocalResources,Boolean isRendererInitiated);
    extern String Elastos_ContentViewCore_nativeGetURL(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeShowInterstitialPage(IInterface* caller,HANDLE nativeContentViewCoreImpl,const String& url,HANDLE nativeInterstitialPageDelegateAndroid);
    extern Boolean Elastos_ContentViewCore_nativeIsShowingInterstitialPage(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern Boolean Elastos_ContentViewCore_nativeIsIncognito(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeSetFocus(IInterface* caller,HANDLE nativeContentViewCoreImpl,Boolean focused);
    extern void Elastos_ContentViewCore_nativeSendOrientationChangeEvent(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int32 orientation);
    extern Boolean Elastos_ContentViewCore_nativeOnTouchEvent(IInterface* caller,HANDLE nativeContentViewCoreImpl,IInterface* event,Int64 timeMs,Int32 action,Int32 pointerCount,Int32 historySize,Int32 actionIndex,Float x0,Float y0,Float x1,Float y1,Int32 pointerId0,Int32 pointerId1,Float touchMajor0,Float touchMajor1,Float rawX,Float rawY,Int32 androidToolType0,Int32 androidToolType1,Int32 androidButtonState);
    extern Int32 Elastos_ContentViewCore_nativeSendMouseMoveEvent(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs,Float x,Float y);
    extern Int32 Elastos_ContentViewCore_nativeSendMouseWheelEvent(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs,Float x,Float y,Float verticalAxis);
    extern void Elastos_ContentViewCore_nativeScrollBegin(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs,Float x,Float y,Float hintX,Float hintY);
    extern void Elastos_ContentViewCore_nativeScrollEnd(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs);
    extern void Elastos_ContentViewCore_nativeScrollBy(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs,Float x,Float y,Float deltaX,Float deltaY);
    extern void Elastos_ContentViewCore_nativeFlingStart(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs,Float x,Float y,Float vx,Float vy);
    extern void Elastos_ContentViewCore_nativeFlingCancel(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs);
    extern void Elastos_ContentViewCore_nativeSingleTap(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs,Float x,Float y);
    extern void Elastos_ContentViewCore_nativeDoubleTap(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs,Float x,Float y);
    extern void Elastos_ContentViewCore_nativeLongPress(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs,Float x,Float y);
    extern void Elastos_ContentViewCore_nativePinchBegin(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs,Float x,Float y);
    extern void Elastos_ContentViewCore_nativePinchEnd(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs);
    extern void Elastos_ContentViewCore_nativePinchBy(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int64 timeMs,Float anchorX,Float anchorY,Float deltaScale);
    extern void Elastos_ContentViewCore_nativeSelectBetweenCoordinates(IInterface* caller,HANDLE nativeContentViewCoreImpl,Float x1,Float y1,Float x2,Float y2);
    extern void Elastos_ContentViewCore_nativeMoveCaret(IInterface* caller,HANDLE nativeContentViewCoreImpl,Float x,Float y);
    extern void Elastos_ContentViewCore_nativeResetGestureDetection(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeSetDoubleTapSupportEnabled(IInterface* caller,HANDLE nativeContentViewCoreImpl,Boolean enabled);
    extern void Elastos_ContentViewCore_nativeSetMultiTouchZoomSupportEnabled(IInterface* caller,HANDLE nativeContentViewCoreImpl,Boolean enabled);
    extern void Elastos_ContentViewCore_nativeLoadIfNecessary(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeRequestRestoreLoad(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeReload(IInterface* caller,HANDLE nativeContentViewCoreImpl,Boolean checkForRepost);
    extern void Elastos_ContentViewCore_nativeReloadIgnoringCache(IInterface* caller,HANDLE nativeContentViewCoreImpl,Boolean checkForRepost);
    extern void Elastos_ContentViewCore_nativeCancelPendingReload(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeContinuePendingReload(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeSelectPopupMenuItems(IInterface* caller,HANDLE nativeContentViewCoreImpl,ArrayOf<Int32>* indices);
    extern void Elastos_ContentViewCore_nativeScrollFocusedEditableNodeIntoView(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeSelectWordAroundCaret(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeClearHistory(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeAddStyleSheetByURL(IInterface* caller,HANDLE nativeContentViewCoreImpl,const String& stylesheetUrl);
    extern void Elastos_ContentViewCore_nativeEvaluateJavaScript(IInterface* caller,HANDLE nativeContentViewCoreImpl,const String& script,IInterface* callback,Boolean startRenderer);
    extern HANDLE Elastos_ContentViewCore_nativeGetNativeImeAdapter(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern Int32 Elastos_ContentViewCore_nativeGetCurrentRenderProcessId(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern Int32 Elastos_ContentViewCore_nativeGetBackgroundColor(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeOnShow(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeOnHide(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeSetUseDesktopUserAgent(IInterface* caller,HANDLE nativeContentViewCoreImpl,Boolean enabled,Boolean reloadOnChange);
    extern Boolean Elastos_ContentViewCore_nativeGetUseDesktopUserAgent(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeClearSslPreferences(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeSetAllowJavascriptInterfacesInspection(IInterface* caller,HANDLE nativeContentViewCoreImpl,Boolean allow);
    extern void Elastos_ContentViewCore_nativeAddJavascriptInterface(IInterface* caller,HANDLE nativeContentViewCoreImpl,IInterface* object,const String& name,IInterface* requiredAnnotation);
    extern void Elastos_ContentViewCore_nativeRemoveJavascriptInterface(IInterface* caller,HANDLE nativeContentViewCoreImpl,const String& name);
    extern Int32 Elastos_ContentViewCore_nativeGetNavigationHistory(IInterface* caller,HANDLE nativeContentViewCoreImpl,IInterface* context);
    extern void Elastos_ContentViewCore_nativeGetDirectedNavigationHistory(IInterface* caller,HANDLE nativeContentViewCoreImpl,IInterface* context,Boolean isForward,Int32 maxEntries);
    extern String Elastos_ContentViewCore_nativeGetOriginalUrlForActiveNavigationEntry(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeWasResized(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern Boolean Elastos_ContentViewCore_nativeIsRenderWidgetHostViewReady(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeExitFullscreen(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeUpdateTopControlsState(IInterface* caller,HANDLE nativeContentViewCoreImpl,Boolean enableHiding,Boolean enableShowing,Boolean animate);
    extern void Elastos_ContentViewCore_nativeShowImeIfNeeded(IInterface* caller,HANDLE nativeContentViewCoreImpl);
    extern void Elastos_ContentViewCore_nativeSetAccessibilityEnabled(IInterface* caller,HANDLE nativeContentViewCoreImpl,Boolean enabled);
    extern void Elastos_ContentViewCore_nativeExtractSmartClipData(IInterface* caller,HANDLE nativeContentViewCoreImpl,Int32 x,Int32 y,Int32 w,Int32 h);
    extern void Elastos_ContentViewCore_nativeSetBackgroundOpaque(IInterface* caller,HANDLE nativeContentViewCoreImpl,Boolean opaque);
    extern void Elastos_ContentViewCore_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Content {
namespace Browser {

struct ElaContentViewCoreCallback
{
    AutoPtr<IInterface> (*elastos_ContentViewCore_getContext)(IInterface* obj);
    void (*elastos_ContentViewCore_onNativeContentViewCoreDestroyed)(IInterface* obj, HANDLE nativeContentViewCore);
    HANDLE (*elastos_ContentViewCore_getNativeContentViewCore)(IInterface* obj);
    void (*elastos_ContentViewCore_onBackgroundColorChanged)(IInterface* obj, Int32 color);
    Int32 (*elastos_ContentViewCore_getViewportWidthPix)(IInterface* obj);
    Int32 (*elastos_ContentViewCore_getViewportHeightPix)(IInterface* obj);
    Int32 (*elastos_ContentViewCore_getPhysicalBackingWidthPix)(IInterface* obj);
    Int32 (*elastos_ContentViewCore_getPhysicalBackingHeightPix)(IInterface* obj);
    Int32 (*elastos_ContentViewCore_getOverdrawBottomHeightPix)(IInterface* obj);
    Int32 (*elastos_ContentViewCore_getViewportSizeOffsetWidthPix)(IInterface* obj);
    Int32 (*elastos_ContentViewCore_getViewportSizeOffsetHeightPix)(IInterface* obj);
    void (*elastos_ContentViewCore_onFlingStartEventConsumed)(IInterface* obj, Int32 vx, Int32 vy);
    void (*elastos_ContentViewCore_onFlingStartEventHadNoConsumer)(IInterface* obj, Int32 vx, Int32 vy);
    void (*elastos_ContentViewCore_onFlingCancelEventAck)(IInterface* obj);
    void (*elastos_ContentViewCore_onScrollBeginEventAck)(IInterface* obj);
    void (*elastos_ContentViewCore_onScrollUpdateGestureConsumed)(IInterface* obj);
    void (*elastos_ContentViewCore_onScrollEndEventAck)(IInterface* obj);
    void (*elastos_ContentViewCore_onPinchBeginEventAck)(IInterface* obj);
    void (*elastos_ContentViewCore_onPinchEndEventAck)(IInterface* obj);
    void (*elastos_ContentViewCore_onSingleTapEventAck)(IInterface* obj, Boolean consumed, Int32 x, Int32 y);
    void (*elastos_ContentViewCore_onDoubleTapEventAck)(IInterface* obj);
    Boolean (*elastos_ContentViewCore_filterTapOrPressEvent)(IInterface* obj, Int32 type, Int32 x, Int32 y);
    void (*elastos_ContentViewCore_updateFrameInfo)(IInterface* obj, Float scrollOffsetX, Float scrollOffsetY, Float pageScaleFactor, Float minPageScaleFactor, Float maxPageScaleFactor, Float contentWidth, Float contentHeight, Float viewportWidth, Float viewportHeight, Float controlsOffsetYCss, Float contentOffsetYCss, Float overdrawBottomHeightCss);
    void (*elastos_ContentViewCore_updateImeAdapter)(IInterface* obj, HANDLE nativeImeAdapterAndroid, Int32 textInputType, const String& text, Int32 selectionStart, Int32 selectionEnd, Int32 compositionStart, Int32 compositionEnd, Boolean showImeIfNeeded, Boolean isNonImeChange);
    void (*elastos_ContentViewCore_setTitle)(IInterface* obj, const String& title);
    void (*elastos_ContentViewCore_showSelectPopup)(IInterface* obj, IInterface* bounds, ArrayOf<String>* items, ArrayOf<Int32>* enabled, Boolean multiple, ArrayOf<Int32>* selectedIndices);
    void (*elastos_ContentViewCore_hideSelectPopup)(IInterface* obj);
    void (*elastos_ContentViewCore_showDisambiguationPopup)(IInterface* obj, IInterface* targetRect, IInterface* zoomedBitmap);
    AutoPtr<IInterface> (*elastos_ContentViewCore_createTouchEventSynthesizer)(IInterface* obj);
    void (*elastos_ContentViewCore_onSelectionChanged)(IInterface* obj, const String& text);
    void (*elastos_ContentViewCore_showSelectionHandlesAutomatically)(IInterface* obj);
    void (*elastos_ContentViewCore_onSelectionBoundsChanged)(IInterface* obj, IInterface* anchorRectDip, Int32 anchorDir, IInterface* focusRectDip, Int32 focusDir, Boolean isAnchorFirst);
    void (*elastos_ContentViewCore_onEvaluateJavaScriptResult)(const String& jsonResult, IInterface* callback);
    void (*elastos_ContentViewCore_showPastePopup)(IInterface* obj, Int32 xDip, Int32 yDip);
    void (*elastos_ContentViewCore_onRenderProcessChange)(IInterface* obj);
    Boolean (*elastos_ContentViewCore_hasFocus)(IInterface* obj);
    void (*elastos_ContentViewCore_startContentIntent)(IInterface* obj, const String& contentUrl);
    void (*elastos_ContentViewCore_addToNavigationHistory)(IInterface* obj, IInterface* history, Int32 index, const String& url, const String& virtualUrl, const String& originalUrl, const String& title, IInterface* favicon);
    AutoPtr<IInterface> (*elastos_ContentViewCore_createRect)(Int32 x, Int32 y, Int32 right, Int32 bottom);
    void (*elastos_ContentViewCore_onSmartClipDataExtracted)(IInterface* obj, const String& text, const String& html, IInterface* clipRect);
    AutoPtr<IInterface> (*elastos_ContentViewCore_getContentVideoViewClient)(IInterface* obj);
    Boolean (*elastos_ContentViewCore_shouldBlockMediaRequest)(IInterface* obj, const String& url);
    void (*elastos_ContentViewCore_onNativeFlingStopped)(IInterface* obj);
};

void* ContentViewCore::ElaContentViewCoreCallback_Init()
{
    static ElaContentViewCoreCallback sElaContentViewCoreCallback;

    sElaContentViewCoreCallback.elastos_ContentViewCore_getContext = &ContentViewCore::GetContext;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onNativeContentViewCoreDestroyed = &ContentViewCore::OnNativeContentViewCoreDestroyed;
    sElaContentViewCoreCallback.elastos_ContentViewCore_getNativeContentViewCore = &ContentViewCore::GetNativeContentViewCore;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onBackgroundColorChanged = &ContentViewCore::OnBackgroundColorChanged;
    sElaContentViewCoreCallback.elastos_ContentViewCore_getViewportWidthPix = &ContentViewCore::GetViewportWidthPix;
    sElaContentViewCoreCallback.elastos_ContentViewCore_getViewportHeightPix = &ContentViewCore::GetViewportHeightPix;
    sElaContentViewCoreCallback.elastos_ContentViewCore_getPhysicalBackingWidthPix = &ContentViewCore::GetPhysicalBackingWidthPix;
    sElaContentViewCoreCallback.elastos_ContentViewCore_getPhysicalBackingHeightPix = &ContentViewCore::GetPhysicalBackingHeightPix;
    sElaContentViewCoreCallback.elastos_ContentViewCore_getOverdrawBottomHeightPix = &ContentViewCore::GetOverdrawBottomHeightPix;
    sElaContentViewCoreCallback.elastos_ContentViewCore_getViewportSizeOffsetWidthPix = &ContentViewCore::GetViewportSizeOffsetWidthPix;
    sElaContentViewCoreCallback.elastos_ContentViewCore_getViewportSizeOffsetHeightPix = &ContentViewCore::GetViewportSizeOffsetHeightPix;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onFlingStartEventConsumed = &ContentViewCore::OnFlingStartEventConsumed;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onFlingStartEventHadNoConsumer = &ContentViewCore::OnFlingStartEventHadNoConsumer;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onFlingCancelEventAck = &ContentViewCore::OnFlingCancelEventAck;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onScrollBeginEventAck = &ContentViewCore::OnScrollBeginEventAck;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onScrollUpdateGestureConsumed = &ContentViewCore::OnScrollUpdateGestureConsumed;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onScrollEndEventAck = &ContentViewCore::OnScrollEndEventAck;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onPinchBeginEventAck = &ContentViewCore::OnPinchBeginEventAck;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onPinchEndEventAck = &ContentViewCore::OnPinchEndEventAck;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onSingleTapEventAck = &ContentViewCore::OnSingleTapEventAck;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onDoubleTapEventAck = &ContentViewCore::OnDoubleTapEventAck;
    sElaContentViewCoreCallback.elastos_ContentViewCore_filterTapOrPressEvent = &ContentViewCore::FilterTapOrPressEvent;
    sElaContentViewCoreCallback.elastos_ContentViewCore_updateFrameInfo = &ContentViewCore::UpdateFrameInfo;
    sElaContentViewCoreCallback.elastos_ContentViewCore_updateImeAdapter = &ContentViewCore::UpdateImeAdapter;
    sElaContentViewCoreCallback.elastos_ContentViewCore_setTitle = &ContentViewCore::SetTitle;
    sElaContentViewCoreCallback.elastos_ContentViewCore_showSelectPopup = &ContentViewCore::ShowSelectPopup;
    sElaContentViewCoreCallback.elastos_ContentViewCore_hideSelectPopup = &ContentViewCore::HideSelectPopup;
    sElaContentViewCoreCallback.elastos_ContentViewCore_showDisambiguationPopup = &ContentViewCore::ShowDisambiguationPopup;
    sElaContentViewCoreCallback.elastos_ContentViewCore_createTouchEventSynthesizer = &ContentViewCore::CreateTouchEventSynthesizer;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onSelectionChanged = &ContentViewCore::OnSelectionChanged;
    sElaContentViewCoreCallback.elastos_ContentViewCore_showSelectionHandlesAutomatically = &ContentViewCore::ShowSelectionHandlesAutomatically;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onSelectionBoundsChanged = &ContentViewCore::OnSelectionBoundsChanged;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onEvaluateJavaScriptResult = &ContentViewCore::OnEvaluateJavaScriptResult;
    sElaContentViewCoreCallback.elastos_ContentViewCore_showPastePopup = &ContentViewCore::ShowPastePopup;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onRenderProcessChange = &ContentViewCore::OnRenderProcessChange;
    sElaContentViewCoreCallback.elastos_ContentViewCore_hasFocus = &ContentViewCore::HasFocus;
    sElaContentViewCoreCallback.elastos_ContentViewCore_startContentIntent = &ContentViewCore::StartContentIntent;
    sElaContentViewCoreCallback.elastos_ContentViewCore_addToNavigationHistory = &ContentViewCore::AddToNavigationHistory;
    sElaContentViewCoreCallback.elastos_ContentViewCore_createRect = &ContentViewCore::CreateRect;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onSmartClipDataExtracted = &ContentViewCore::OnSmartClipDataExtracted;
    sElaContentViewCoreCallback.elastos_ContentViewCore_getContentVideoViewClient = &ContentViewCore::GetContentVideoViewClient;
    sElaContentViewCoreCallback.elastos_ContentViewCore_shouldBlockMediaRequest = &ContentViewCore::ShouldBlockMediaRequest;
    sElaContentViewCoreCallback.elastos_ContentViewCore_onNativeFlingStopped = &ContentViewCore::OnNativeFlingStopped;

    Elastos_ContentViewCore_InitCallback((HANDLE)&sElaContentViewCoreCallback);
    return &sElaContentViewCoreCallback;
}

static void* sPElaContentViewCoreCallback = ContentViewCore::ElaContentViewCoreCallback_Init();

} // namespace Browser
} // namespace Content
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_CONTENTVIEWCORE_CALLBACK_DEC_HH
