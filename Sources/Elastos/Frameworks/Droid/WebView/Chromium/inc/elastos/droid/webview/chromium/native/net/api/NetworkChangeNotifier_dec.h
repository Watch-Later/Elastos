//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    NetworkChangeNotifier.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_NETWORKCHANGENOTIFIER_CALLBACK_DEC_HH
#define ELASTOS_NETWORKCHANGENOTIFIER_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_NetworkChangeNotifier_nativeNotifyConnectionTypeChanged(IInterface* caller,HANDLE nativePtr,Int32 newConnectionType);
    extern void Elastos_NetworkChangeNotifier_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Net {

struct ElaNetworkChangeNotifierCallback
{
    AutoPtr<IInterface> (*elastos_NetworkChangeNotifier_init)(IInterface* context);
    Int32 (*elastos_NetworkChangeNotifier_getCurrentConnectionType)(IInterface* obj);
    void (*elastos_NetworkChangeNotifier_addNativeObserver)(IInterface* obj, HANDLE nativeChangeNotifier);
    void (*elastos_NetworkChangeNotifier_removeNativeObserver)(IInterface* obj, HANDLE nativeChangeNotifier);
    void (*elastos_NetworkChangeNotifier_forceConnectivityState)(Boolean networkAvailable);
};

void* NetworkChangeNotifier::ElaNetworkChangeNotifierCallback_Init()
{
    static ElaNetworkChangeNotifierCallback sElaNetworkChangeNotifierCallback;

    sElaNetworkChangeNotifierCallback.elastos_NetworkChangeNotifier_init = &NetworkChangeNotifier::Init;
    sElaNetworkChangeNotifierCallback.elastos_NetworkChangeNotifier_getCurrentConnectionType = &NetworkChangeNotifier::GetCurrentConnectionType;
    sElaNetworkChangeNotifierCallback.elastos_NetworkChangeNotifier_addNativeObserver = &NetworkChangeNotifier::AddNativeObserver;
    sElaNetworkChangeNotifierCallback.elastos_NetworkChangeNotifier_removeNativeObserver = &NetworkChangeNotifier::RemoveNativeObserver;
    sElaNetworkChangeNotifierCallback.elastos_NetworkChangeNotifier_forceConnectivityState = &NetworkChangeNotifier::ForceConnectivityState;

    Elastos_NetworkChangeNotifier_InitCallback((HANDLE)&sElaNetworkChangeNotifierCallback);
    return &sElaNetworkChangeNotifierCallback;
}

static void* sPElaNetworkChangeNotifierCallback = NetworkChangeNotifier::ElaNetworkChangeNotifierCallback_Init();

} // namespace Net
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_NETWORKCHANGENOTIFIER_CALLBACK_DEC_HH
