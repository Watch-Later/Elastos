//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    WebAudioMediaCodecBridge.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_WEBAUDIOMEDIACODECBRIDGE_CALLBACK_DEC_HH
#define ELASTOS_WEBAUDIOMEDIACODECBRIDGE_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_WebAudioMediaCodecBridge_nativeOnChunkDecoded(HANDLE nativeWebAudioMediaCodecBridge,IInterface* buf,Int32 size,Int32 inputChannelCount,Int32 outputChannelCount);
    extern void Elastos_WebAudioMediaCodecBridge_nativeInitializeDestination(HANDLE nativeWebAudioMediaCodecBridge,Int32 inputChannelCount,Int32 sampleRate,Int64 durationMicroseconds);
    extern void Elastos_WebAudioMediaCodecBridge_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Media {

struct ElaWebAudioMediaCodecBridgeCallback
{
    String (*elastos_WebAudioMediaCodecBridge_CreateTempFile)(IInterface* ctx);
    Boolean (*elastos_WebAudioMediaCodecBridge_decodeAudioFile)(IInterface* ctx, HANDLE nativeMediaCodecBridge, Int32 inputFD, Int64 dataSize);
};

void* WebAudioMediaCodecBridge::ElaWebAudioMediaCodecBridgeCallback_Init()
{
    static ElaWebAudioMediaCodecBridgeCallback sElaWebAudioMediaCodecBridgeCallback;

    sElaWebAudioMediaCodecBridgeCallback.elastos_WebAudioMediaCodecBridge_CreateTempFile = &WebAudioMediaCodecBridge::CreateTempFile;
    sElaWebAudioMediaCodecBridgeCallback.elastos_WebAudioMediaCodecBridge_decodeAudioFile = &WebAudioMediaCodecBridge::DecodeAudioFile;

    Elastos_WebAudioMediaCodecBridge_InitCallback((HANDLE)&sElaWebAudioMediaCodecBridgeCallback);
    return &sElaWebAudioMediaCodecBridgeCallback;
}

static void* sPElaWebAudioMediaCodecBridgeCallback = WebAudioMediaCodecBridge::ElaWebAudioMediaCodecBridgeCallback_Init();

} // namespace Media
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_WEBAUDIOMEDIACODECBRIDGE_CALLBACK_DEC_HH
