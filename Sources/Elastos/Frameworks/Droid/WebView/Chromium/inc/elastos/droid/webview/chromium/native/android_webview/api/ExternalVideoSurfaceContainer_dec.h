//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    ExternalVideoSurfaceContainer.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_EXTERNALVIDEOSURFACECONTAINER_CALLBACK_DEC_HH
#define ELASTOS_EXTERNALVIDEOSURFACECONTAINER_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_ExternalVideoSurfaceContainer_nativeSurfaceCreated(IInterface* caller,HANDLE nativeExternalVideoSurfaceContainerImpl,Int32 playerId,IInterface* surface);
    extern void Elastos_ExternalVideoSurfaceContainer_nativeSurfaceDestroyed(IInterface* caller,HANDLE nativeExternalVideoSurfaceContainerImpl,Int32 playerId);
    extern void Elastos_ExternalVideoSurfaceContainer_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif


namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace AndroidWebview {

struct ElaExternalVideoSurfaceContainerCallback
{
    AutoPtr<IInterface> (*elastos_ExternalVideoSurfaceContainer_create)(HANDLE nativeExternalVideoSurfaceContainer, IInterface* contentViewCore);
    void (*elastos_ExternalVideoSurfaceContainer_requestExternalVideoSurface)(IInterface* obj, Int32 playerId);
    void (*elastos_ExternalVideoSurfaceContainer_releaseExternalVideoSurface)(IInterface* obj, Int32 playerId);
    void (*elastos_ExternalVideoSurfaceContainer_destroy)(IInterface* obj);
    void (*elastos_ExternalVideoSurfaceContainer_onExternalVideoSurfacePositionChanged)(IInterface* obj, Int32 playerId, Float left, Float top, Float right, Float bottom);
    void (*elastos_ExternalVideoSurfaceContainer_onFrameInfoUpdated)(IInterface* obj);
};

void* ExternalVideoSurfaceContainer::ElaExternalVideoSurfaceContainerCallback_Init()
{
    static ElaExternalVideoSurfaceContainerCallback sElaExternalVideoSurfaceContainerCallback;

    sElaExternalVideoSurfaceContainerCallback.elastos_ExternalVideoSurfaceContainer_create = &ExternalVideoSurfaceContainer::Create;
    sElaExternalVideoSurfaceContainerCallback.elastos_ExternalVideoSurfaceContainer_requestExternalVideoSurface = &ExternalVideoSurfaceContainer::RequestExternalVideoSurface;
    sElaExternalVideoSurfaceContainerCallback.elastos_ExternalVideoSurfaceContainer_releaseExternalVideoSurface = &ExternalVideoSurfaceContainer::ReleaseExternalVideoSurface;
    sElaExternalVideoSurfaceContainerCallback.elastos_ExternalVideoSurfaceContainer_destroy = &ExternalVideoSurfaceContainer::Destroy;
    sElaExternalVideoSurfaceContainerCallback.elastos_ExternalVideoSurfaceContainer_onExternalVideoSurfacePositionChanged = &ExternalVideoSurfaceContainer::OnExternalVideoSurfacePositionChanged;
    sElaExternalVideoSurfaceContainerCallback.elastos_ExternalVideoSurfaceContainer_onFrameInfoUpdated = &ExternalVideoSurfaceContainer::OnFrameInfoUpdated;

    Elastos_ExternalVideoSurfaceContainer_InitCallback((HANDLE)&sElaExternalVideoSurfaceContainerCallback);
    return &sElaExternalVideoSurfaceContainerCallback;
}

static void* sPElaExternalVideoSurfaceContainerCallback = ExternalVideoSurfaceContainer::ElaExternalVideoSurfaceContainerCallback_Init();

} // namespace AndroidWebview
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_EXTERNALVIDEOSURFACECONTAINER_CALLBACK_DEC_HH
