//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    MediaResourceGetter.java
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_MEDIARESOURCEGETTER_CALLBACK_DEC_HH
#define ELASTOS_MEDIARESOURCEGETTER_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_MediaResourceGetter_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif

namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Content {
namespace Browser {

struct ElaMediaResourceGetterCallback
{
    Int32 (*elastos_MediaMetadata_getDurationInMilliseconds)(IInterface* obj);
    Int32 (*elastos_MediaMetadata_getWidth)(IInterface* obj);
    Int32 (*elastos_MediaMetadata_getHeight)(IInterface* obj);
    Boolean (*elastos_MediaMetadata_isSuccess)(IInterface* obj);
    AutoPtr<IInterface> (*elastos_MediaResourceGetter_extractMediaMetadata)(IInterface* context, const String& url, const String& cookies, const String& userAgent);
    AutoPtr<IInterface> (*elastos_MediaResourceGetter_extractMediaMetadataFromFd)(Int32 fd, Int64 offset, Int64 length);
};

void* MediaResourceGetter::ElaMediaResourceGetterCallback_Init()
{
    static ElaMediaResourceGetterCallback sElaMediaResourceGetterCallback;

    sElaMediaResourceGetterCallback.elastos_MediaMetadata_getDurationInMilliseconds = &MediaResourceGetter::MediaMetadata::GetDurationInMilliseconds;
    sElaMediaResourceGetterCallback.elastos_MediaMetadata_getWidth = &MediaResourceGetter::MediaMetadata::GetWidth;
    sElaMediaResourceGetterCallback.elastos_MediaMetadata_getHeight = &MediaResourceGetter::MediaMetadata::GetHeight;
    sElaMediaResourceGetterCallback.elastos_MediaMetadata_isSuccess = &MediaResourceGetter::MediaMetadata::IsSuccess;
    sElaMediaResourceGetterCallback.elastos_MediaResourceGetter_extractMediaMetadata = &MediaResourceGetter::ExtractMediaMetadata;
    sElaMediaResourceGetterCallback.elastos_MediaResourceGetter_extractMediaMetadataFromFd = &MediaResourceGetter::ExtractMediaMetadataFromFd;

    Elastos_MediaResourceGetter_InitCallback((HANDLE)&sElaMediaResourceGetterCallback);
    return &sElaMediaResourceGetterCallback;
}

static void* sPElaMediaResourceGetterCallback = MediaResourceGetter::ElaMediaResourceGetterCallback_Init();

} // namespace Browser
} // namespace Content
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_MEDIARESOURCEGETTER_CALLBACK_DEC_HH
