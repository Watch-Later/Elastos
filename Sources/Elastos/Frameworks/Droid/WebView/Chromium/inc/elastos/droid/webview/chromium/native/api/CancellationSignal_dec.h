//=========================================================================
// Copyright (C) 2012 The Elastos Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//=========================================================================

//This file is autogenerated for
//    CancellationSignal.class
//put this file at the end of the include list
//so the type definition used in this file will be found
#ifndef ELASTOS_CANCELLATIONSIGNAL_CALLBACK_DEC_HH
#define ELASTOS_CANCELLATIONSIGNAL_CALLBACK_DEC_HH


#ifdef __cplusplus
extern "C"
{
#endif
    extern void Elastos_CancellationSignal_InitCallback(HANDLE cb);
#ifdef __cplusplus
}
#endif

namespace Elastos {
namespace Droid {
namespace Webkit {
namespace Webview {
namespace Chromium {
namespace Api {

//TODO no user found for this callback function in chromium_org
struct ElaCancellationSignalCallback
{
    Boolean (*elastos_CancellationSignal_isCanceled)(IInterface* obj);
    void (*elastos_CancellationSignal_throwIfCanceled)(IInterface* obj);
    void (*elastos_CancellationSignal_cancel)(IInterface* obj);
    void (*elastos_CancellationSignal_setOnCancelListener)(IInterface* obj, IInterface* p0);
    AutoPtr<IInterface> (*elastos_CancellationSignal_Constructor)();
};

void* AwCancellationSignal::ElaCancellationSignalCallback_Init()
{
    static ElaCancellationSignalCallback sElaCancellationSignalCallback;

    sElaCancellationSignalCallback.elastos_CancellationSignal_isCanceled = &AwCancellationSignal::IsCanceled;
    sElaCancellationSignalCallback.elastos_CancellationSignal_throwIfCanceled = &AwCancellationSignal::ThrowIfCanceled;
    sElaCancellationSignalCallback.elastos_CancellationSignal_cancel = &AwCancellationSignal::Cancel;
    sElaCancellationSignalCallback.elastos_CancellationSignal_setOnCancelListener = &AwCancellationSignal::SetOnCancelListener;
    sElaCancellationSignalCallback.elastos_CancellationSignal_Constructor = &AwCancellationSignal::Constructor;
    //no user for these callbacks in chromium.so
    //Elastos_CancellationSignal_InitCallback((HANDLE)&sElaCancellationSignalCallback);
    return &sElaCancellationSignalCallback;
}

//static void* sPElaCancellationSignalCallback = AwCancellationSignal::ElaCancellationSignalCallback_Init();

} // namespace Api
} // namespace Chromium
} // namespace Webview
} // namespace Webkit
} // namespace Droid
} // namespace Elastos

#endif //ELASTOS_CANCELLATIONSIGNAL_CALLBACK_DEC_HH
